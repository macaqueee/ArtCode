// Lifecycle:

JAR: - archive of my Classes
-classpath: place, where my .jar and .class (and etc.) presents
-classloader: loading class, what i need. (Classpath -> where from, import <package> -> what is loading)
 static fields and blocks -> calling during loading
 initializating of static: Only once, after first time loading Class (calling Class'es static variable or block from method)
 static depends on CLASS
 non-static depends on INSTANCE
 
 // final need to be initialized
 final reference
 
// ArrayList methods:

add(<object>) || add(<position>, <element>) : adding new element to the end of the list; or adding element on <position>
size() : return size of the ArrayList;
set(<position>, <element>) : Replaces the element at the specified position in this list with the specified element (optional operation).
get(<position>) : returns the element at the specified position
remove(<position>) : removes the element at the specified position
contains(<element>) : returns boolean. if Arraylist contains specified element, returns true; else returns false;
indexOf(<element>) : returns position of specifiend element.
isEmpty() : returns boolean true, if list is empty; else returns false;
clear() : removes all elements in the Arraylist;

ArrayList - its a class inherited from class List

// List methods:

sublist(<position1>, <position2>) -> returns sublist between specified positions.
toArray() -> turns list to Array

// Wrappers:

Autoboxing: Object obj = 5;
Unboxing: Integer i = 5;
           int a = 35+i;
 Methods:
 
 Integer.compare(22,22) : returns boolean of comparing
 Ingeger.parseInt("2") : turns String into Integer
 
